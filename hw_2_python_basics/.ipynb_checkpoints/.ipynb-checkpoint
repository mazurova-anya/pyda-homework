{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Даны 2 строки: long_phrase и short_phrase. \n",
    "Напишите код, который проверяет действительно \n",
    "ли длинная фраза long_phrase длиннее короткой \n",
    "short_phrase. И выводит True или False в зависимости \n",
    "от результата сравнения"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "long_phrase = 'Насколько проще было бы писать программы, если бы не заказчики'\n",
    "short_phrase = '640Кб должно хватить для любых задач. Билл Гейтс (по легенде)'\n",
    "\n",
    "if len (long_phrase) > len (short_phrase):\n",
    "    print ('True')\n",
    "else: \n",
    "    print ('False')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Дано значение объема файла в байтах (в мегабайте 2^20 байт). \n",
    "Напишите перевод этого значения в мегабайты в формате: \n",
    "\"Объем файла равен 213.68Mb\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Введите значение в байтах 4532184\n",
      "Объем файла равен  4.322227478027344 Mb\n"
     ]
    }
   ],
   "source": [
    "user_input = int(input ('Введите значение в байтах '))\n",
    "a = user_input / 2**20\n",
    "print ('Объем файла равен ', a,'Mb')\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Задание 3. \n",
    "Разработать приложение для определения знака зодиака по дате рождения. \n",
    "Пример:\n",
    "Введите месяц: март\n",
    "Введите число: 6\n",
    "Вывод: Рыбы"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "21 января - 20 февраля           Водолей\n",
    "\n",
    "21 февраля - 20 марта            Рыбы\n",
    "\n",
    "21 марта - 20 апреля             Овен\n",
    "\n",
    "21 апреля - 20 мая               Телец\n",
    "\n",
    "21 мая - 21 июня                 Близнецы\n",
    "\n",
    "22 июня - 22 июля                Рак\n",
    "\n",
    "23 июля - 23 августа             Лев\n",
    "\n",
    "24 августа - 23 сентября         Дева\n",
    "\n",
    "24 сентября - 23 октября         Весы\n",
    "\n",
    "24 октября - 22 ноября           Скорпион\n",
    "\n",
    "23 ноября - 21 декабря           Стрелец\n",
    "\n",
    "22 декабря - 20 января           Козерог"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Введите месяц: февраль\n",
      "Введите число: 0\n",
      "Неверная дата\n"
     ]
    }
   ],
   "source": [
    "user_input_month = input('Введите месяц: ')\n",
    "user_input_date = int(input ('Введите число: '))\n",
    "\n",
    "if user_input_date >= 32 or user_input_date <=0 :\n",
    "        print ('Неверная дата')\n",
    "elif user_input_month == ('январь'): \n",
    "    if 1 <= user_input_date <= 20 :\n",
    "        print ('Козерог')\n",
    "    elif 21 <= user_input_date <= 31:\n",
    "        print ('Водолей')\n",
    "elif user_input_month == ('февраль'): \n",
    "    if 1 <= user_input_date <= 20:\n",
    "        print ('Водолей')\n",
    "    elif 21 <= user_input_date <= 29:\n",
    "        print ('Рыбы')\n",
    "elif user_input_month == ('март'):\n",
    "    if 1 <= user_input_date <= 20:\n",
    "        print ('Рыбы')\n",
    "    elif 21 <= user_input_date <= 31:\n",
    "        print ('Овен')\n",
    "elif user_input_month == ('апрель'):\n",
    "    if 1 <= user_input_date <= 20:\n",
    "        print ('Овен')\n",
    "    elif 21 <= user_input_date <= 30:\n",
    "        print ('Телец')\n",
    "elif user_input_month == ('май'):\n",
    "    if 1 <= user_input_date <= 20:\n",
    "        print ('Телец')\n",
    "    elif 21 <= user_input_date <= 31:\n",
    "        print ('Близнецы')\n",
    "elif user_input_month == ('июнь'):\n",
    "    if 1 <= user_input_date <= 21:\n",
    "        print ('Близнецы')\n",
    "    elif 22 <= user_input_date <= 30:\n",
    "        print ('Рак')\n",
    "elif user_input_month == ('июль'):\n",
    "    if 1 <= user_input_date <= 22:\n",
    "        print ('Рак')\n",
    "    elif 23 <= user_input_date <= 31:\n",
    "        print ('Лев')\n",
    "elif user_input_month == ('август'):\n",
    "    if 1 <= user_input_date <= 23:\n",
    "        print ('Лев')\n",
    "    elif 24 <= user_input_date <= 31:\n",
    "        print ('Дева')\n",
    "elif user_input_month == ('сентябрь'):\n",
    "    if 1 <= user_input_date <= 23:\n",
    "        print ('Дева')\n",
    "    elif 24 <= user_input_date <= 30:\n",
    "        print ('Весы')\n",
    "elif user_input_month == ('октябрь'):\n",
    "    if 1 <= user_input_date <= 23:\n",
    "        print ('Весы')\n",
    "    elif 24 <= user_input_date <= 31:\n",
    "        print ('Скорпион')\n",
    "elif user_input_month == ('ноябрь'):\n",
    "    if 1 <= user_input_date <= 22:\n",
    "        print ('Скорпион')\n",
    "    elif 23 <= user_input_date <= 30:\n",
    "        print ('Стрелец')\n",
    "else:\n",
    "    if user_input_month == ('декабрь'):\n",
    "        if 1 <= user_input_date <= 21:\n",
    "            print ('Стрелец')\n",
    "        elif 22 <= user_input_date <= 31:\n",
    "            print ('Козерог')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Введите месяц: май\n",
      "Введите число: 9\n",
      "Телец\n"
     ]
    }
   ],
   "source": [
    "user_input_month = input('Введите месяц: ')\n",
    "user_input_date = int(input ('Введите число: '))\n",
    "\n",
    "if user_input_date >= 32 or user_input_date <=0 :\n",
    "    print ('Неверная дата')\n",
    "elif user_input_date >= 21 and user_input_month == ('январь') or user_input_date <= 20 and user_input_month == ('февраль'):\n",
    "    print ('Водолей')\n",
    "elif user_input_date >= 21 and user_input_month == ('февраль') or user_input_date <= 20 and user_input_month == ('март'):\n",
    "    print ('Рыбы')\n",
    "elif user_input_date >= 21 and user_input_month == ('март') or user_input_date <= 20 and user_input_month == ('апрель'):\n",
    "    print ('Овен')\n",
    "elif user_input_date >= 21 and user_input_month == ('апрель') or user_input_date <= 20 and user_input_month == ('май'):\n",
    "    print ('Телец')\n",
    "elif user_input_date >= 21 and user_input_month == ('май') or user_input_date <= 21 and user_input_month == ('июнь'):\n",
    "    print ('Близнецы')\n",
    "elif user_input_date >= 22 and user_input_month == ('июнь') or user_input_date <= 22 and user_input_month == ('июль'):\n",
    "    print ('Рак')\n",
    "elif user_input_date >= 23 and user_input_month == ('июль') or user_input_date <= 23 and user_input_month == ('август'):\n",
    "    print ('Лев')\n",
    "elif user_input_date >= 24 and user_input_month == ('август') or user_input_date <= 23 and user_input_month == ('сентябрь'):\n",
    "    print ('Дева')\n",
    "elif user_input_date >= 24 and user_input_month == ('сентябрь') or user_input_date <= 23 and user_input_month == ('октябрь'):\n",
    "    print ('Весы')\n",
    "elif user_input_date >= 24 and user_input_month == ('октябрь') or user_input_date <= 22 and user_input_month == ('ноябрь'):\n",
    "    print ('Скорпион')\n",
    "elif user_input_date >= 23 and user_input_month == ('ноябрь') or user_input_date <= 21 and user_input_month == ('декабрь'):\n",
    "    print ('Стрелец')\n",
    "else:\n",
    "    if user_input_date >= 22 and user_input_month == ('декабрь') or user_input_date <= 20 and user_input_month == ('январь'):\n",
    "        print ('Козерог')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
